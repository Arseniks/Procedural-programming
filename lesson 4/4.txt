4.1
#include <iostream>
#include <fstream>
#include <cstring>

using namespace std;

int main()
{
    string num;

    ofstream fout ("file.txt");
    cout << "Введите 10 чисел через пробел:";

    for (int i = 0; i < 10; i++) {
        cin >> num;
        fout << num << " ";
    }
    fout.close();

    string line;
    double sum;

    ifstream fin;
    fin.open("file.txt");

    if (fin.is_open()) {
        getline(fin, line);
        string num = "";
        for (char i:line) {
            if (int(i) != int(' ')) {
                num += i;
            } else {
                sum += stof(num);
                num = "";
            }
        }
    }
    cout << sum;
    fin.close();
    return 0;
}

4.2
#include <iostream>

using namespace std;


int sign(float x) {
    if (x > 0) {
        return 1;
    } else if (x == 0) {
        return 0;
    } else {
        return -1;
    }
}

int main()
{
    float a;
    cout << "Введите число:";
    cin >> a;
    cout << sign(a);
    return 0;
}

4.3
#include <iostream>
#include <math.h>

using namespace std;


int circle() {
    float R;
    cout << "Введите радиус окружность:";
    cin >> R;
    if (R <= 0) {
        cout << "Радиус должен быть больше 0.";
    } else {
        cout << "S = π ∙ R ^ 2" << endl;
        cout << 3.14 * R * R;
    }
    return 0;
}


int rectangle() {
    float a, b;
    cout << "Введите две стороны прямоугольника:";
    cin >> a >> b;
    if (a <= 0 || b <= 0) {
        cout << "Стороны прямоугольника должны быть больше 0.";
    } else {
        cout << "S = a ∙ b" << endl;
        cout << a * b;
    }
    return 0;
}


int triangle() {
    float a, b, c;
    cout << "Введите три стороны треугольника:";
    cin >> a >> b >> c;
    float p = (a + b + c) / 2;
    float ma = max(max(a, b), c);
    float mi = min(min(a, b), c);
    float sr = a + b + c - ma - mi;
    if (a <= 0 || b <= 0 || c <= 0) {
        cout << "Сторона треугольника должны быть больше 0.";
    } else if (ma >= mi + sr) {
        cout << "Такого треугольника не существует";
    } else {
        cout << "S = sqrt(p ∙ (p - a) ∙ (p - b) ∙ (p - c))" << endl;
        cout << sqrt(p * (p - a) * (p - b) * (p - c));
    }
    return 0;
}


int main() {
    char op;
    cout << "Введите название операции (C - для круга, R - для прямоугольник и T - для треугольника):";
    cin >> op;
    if (int(op) == int('C')) {
        circle();
    } else if (int(op) == int('R')) {
        rectangle();
    } else if (int(op) == int('T')) {
        triangle();
    } else {
        cout << "Введено некорректное обазначение операции";
    }
    return 0;
}

4.4
#include <iostream>

using namespace std;

int main() {
    for (int i = 0; i < 14; i++) {
        for (int j = 0; j < 30; j++) {
            if (i == 0) {
                cout << "_";
            } else if (i >= 1 && i <= 6 && j >= 0 && j <= 8) {
                cout << "*";
            } else {
                cout << "_";
            }
        }
        cout << endl;
    }
    return 0;
}

4.5
#include <iostream>
#include<math.h>

using namespace std;

int main() {
    for (double y = 1; y > -1; y -= 0.1){
        for (double x = -3 * 3.14; x < 3 * 4; x += 0.13) {
            if (abs(sin(x) - y) < 0.1) {
                cout << "*";
            } else {
                cout << " ";
            }
        }
        cout << endl;

    }
    return 0;
}

4.6
#include <iostream>
#include <string>

using namespace std;


int from_roman_to_int(const string& s, char MODE)
{
    string rim_numers = "IVXLCDM";
    int pos = rim_numers.find(MODE);
    int ch[7] = {1,5,10,50,100,500,1000};
    int res = ch[pos];
    int i = s.find(MODE);
    if (i >= 0 && i < s.size())
    {
        string sub1 = s.substr(0, i);
        string sub2 = s.substr(i + 1);
        if (sub1.size() > 0)
        {
            int j = sub1.find(rim_numers[pos]);
            int q = 0;
            while (j < 0 || j >= sub1.size())
            {
                q++;
                j = sub1.find(rim_numers[pos - q]);
            }
            res = res - from_roman_to_int(sub1, rim_numers[pos - q]);
        }
        if (sub2.size() > 0)
        {
            int j = sub2.find(rim_numers[pos]);
            int c = 0;
            while (j < 0 || j >= sub2.size())
            {
                c++;
                j = sub2.find(rim_numers[pos - c]);
            }
            res = res + from_roman_to_int(sub2, rim_numers[pos - c]);
        }
    }
    return res;
}


int main ()
{
    string inp;
    cout << "Введите римское число:" << endl;
    cin >> inp;
    int pos = 6;
    string RIM = "IVXLCDM";
    int i = inp.find(RIM[pos]);
    int c = 0;
    while (i < 0 || i >= inp.size())
    {
        c++;
        i = inp.find(RIM[pos - c]);
    }
    cout << from_roman_to_int(inp, RIM[pos - c]) << endl;

    return 0;
}

4.7
#include <iostream>

using namespace std;

#define m 37
#define b 3
#define c 64
#define s0 0


int s(int i) {
    if (i == 0) {
        return s0;
    } else {
        return (m * s(i - 1) + b) % c;
    }
}


int main() {
    int i;
    cout << "Введите количество членов последовательности:";
    cin >> i;
    for (int n = 1; n < i + 1; n++){
        cout << s(n) << " ";
    }

    return 0;
}

4.8
#include <iostream>

using namespace std;

int main()
{
    double a[3][4] = {5, 2, 0, 10, 3, 5, 2, 5, 20, 0, 0, 0};

    double b[4][2]= {1.2, 0.5, 2.8, 0.4, 5, 1, 2, 1.5};

    double c[3][2];

    for (int i = 0; i < 3; i++){
        for (int j = 0; j < 2; j++){
            for (int k = 0; k < 4; k++){
                c[i][j] += a[i][k] * b[k][j];
            }
        }
    }

    cout << "Матрица С:" << endl;
    for (int i = 0; i < 3; i++){
        for (int j = 0;j < 2; j++){
            cout << c[i][j] << " ";
        }
        cout << endl;
        }
    cout << endl;

    int max1 = 0;
    int min1 = 0;
    double temp = 0;
    double temp2 = 1000000;
    for (int i = 0; i < 3; i++){
        if (c[i][0] > temp){
            max1 = i+1;
            temp = c[i][0];
        }
        if (c[i][0] < temp2){
            min1 = i+1;
            temp2 = c[i][0];
        }
    }

    int max2 = 0;
    int min2 = 0;
    double temp1 = 0;
    double temp3 = 1000000;
    for (int i = 0; i < 3; i++){
        if (c[i][1] > temp1){
            max2 = i+1;
            temp1 = c[i][1];
        }
        if (c[i][1] < temp3){
            min2 = i+1;
            temp3 = c[i][1];
        }
    }

    double s = 0;
    for (int i = 0; i < 3; i++){
        s += c[i][0];
    }

    double s1 = 0;
    for (int i = 0; i < 3; i++){
        s1 += c[i][1];
    }

    cout << "Продавец " << max1 << " выручил больше всего денег с продажи" << ", а продовец " << min1 << " меньше всего." << endl;

    cout << "Продавец " << max2 << " получил наибольшие комиссионные" << ", а продовец " << min2 << " наменьшие." << endl;

    cout << "Общая сумма денег, вырученных за проданные товары равна " << s << endl;

    cout << "Общая сумма комиссионных всех продавцов " << s1 << endl;

    cout << "Общая сумма денег, прошедших через руки продавцов " <<  s + s1 << endl;

    return 0;
}

4.9
#include <iostream>
#include <string>
#include <vector>
#include <math.h>
#include <algorithm>
#include <stdio.h>
#include <stdlib.h>


using namespace std;


int main()
{
    string num;
    int rad_old, rad_new;
    cout << "Введите число:";
    cin >> num;
    cout << "Введите основание системы счисления исходного числа:";
    cin >> rad_old;
    cout << "Введите системe счисления в которую нужно перевести исходное числа:";
    cin >> rad_new;
    vector <int> a;
    int n;
    bool wrong = false;
    for (int i: num) {
        n = int(i);
        if (int('0') <= n && n <= int('9')) {
            n = n - int('0');
        } else if (int('A') <= n && n <= int('Z')) {
            n = n - int('A') + 10;
        } else {
            wrong = true;
        }
        a.push_back(n);
    }
    int to_ten = 0;
    int deg;
    if (wrong) {
        cout << "Введено некорректное число";
    } else {
        deg = a.size() - 1;
        for (int i: a) {
            if (i > rad_old - 1) {
                wrong = true;
            }
            to_ten += i * pow(rad_old, deg);
            deg -= 1;
        }
        if (wrong) {
            cout << "В исходной системе счисления не может быть таких чисел";
        } else {
            vector <int> res;
            while (to_ten > 0) {
                res.push_back(to_ten % rad_new);
                to_ten /= rad_new;
            }
            reverse(res.begin(), res.end());
            for (int i: res) {
                switch(i)
                {
                    case 10:
                        cout << 'A';
                        break;
                    case 11:
                        cout << 'B';
                        break;
                    case 12:
                        cout << 'C';
                        break;
                    case 13:
                        cout << 'D';
                        break;
                    case 14:
                        cout << 'E';
                        break;
                    case 15:
                        cout << 'F';
                        break;
                    default:
                        cout << i;
                        break;
                }

            }
        }
    }
    return 0;
}
